class Solution {
public:
    int findMin(vector<int>& nums) {
        // int n = size(nums);
        // int left = 0;
        // int right = n - 1;
        // int ans;
        // while(left <= right){
        //     int mid =( left + right) / 2;
        //     if(nums[mid] < nums[mid+1] && nums[mid] < nums[mid-1]){
        //         ans = nums[mid];
        //     }else if((nums[mid] - nums[mid+1]) > (nums[mid] - nums[mid-1])){
        //         left = mid + 1;
        //     }else{
        //         right = mid - 1;
        //     }

        //     }
        //     return ans;


        int n = size(nums);
        int left = 0;
        int right = n-1;
        int ans = INT_MAX;
        while(left <= right){
            int mid = (left + right) / 2;
            if(nums[left] <= nums[mid]){
                ans = min(ans,nums[left]);
                left = mid + 1;
            }else{
                right = mid - 1;
                ans = min(ans,nums[mid]);

            }
        }
        return ans;

        }
        
    
};
