/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        ListNode* dummy = new ListNode(0);
        dummy ->next = head;

        ListNode* leftPre = dummy;
        ListNode* currPtr = head;

        for(int i=0; i< left - 1;i++){
            leftPre = leftPre ->next;
            currPtr = currPtr ->next;
        }

        ListNode* sublistHead = currPtr;
        ListNode* preNode = NULL;

        for(int i = 0; i < right - left +1;i++){
            ListNode* next = currPtr ->next;
            currPtr ->next = preNode;
            preNode = currPtr;
            currPtr = next; 
        }

        leftPre ->next = preNode;
        sublistHead ->next = currPtr; 
        return dummy ->next;
    }
};
